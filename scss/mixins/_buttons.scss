@mixin ps-shadow-button($color) {
  @if $enable-shadows {
    box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.5), inset 1px 1px 3px 0 theme-color-shadow($color);
    border-top-color: theme-color-shadow($color);
    border-left-color: theme-color-shadow($color);
  } @else {
    box-shadow: none;
  }
}

@mixin ps-button-variant($background, $border, $active-background: darken($background, 7.5%), $active-border: darken($border, 10%), $color-name: 'primary') {
  color: $white;
  background-color: $background;
  border-color: $border;
  box-shadow: none;

  &:hover {
    color: $white;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    background-color: $active-background;
    border-color: $active-border;
    @include ps-shadow-button($color-name);
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $light-gray;
    border-color: $light-gray;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    background-color: $active-background;
    border-color: $active-border;
    @include ps-shadow-button($color-name);
  }
}

@mixin ps-button-outline-variant($color, $color-hover: #fff, $color-name: 'primary') {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: theme-color-hover($color-name);
    border-color: theme-color-hover($color-name);
  }

  &:focus,
  &.focus {
    color: $color-hover;
    background-color: theme-color-hover($color-name);
    border-color: theme-color-hover($color-name);
    @include ps-shadow-button($color-name);
  }

  &.disabled,
  &:disabled {
    color: $light-gray;
    background-color: transparent;
    border-color: $light-gray;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: theme-color-hover($color-name);
    border-color: theme-color-hover($color-name);
    @include ps-shadow-button($color-name);
  }
}
